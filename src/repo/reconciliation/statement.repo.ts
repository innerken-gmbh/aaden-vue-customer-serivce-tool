import axios from 'axios'
import type { BankStatementDTO } from './types'
import { baseUrl } from '@/store/aaden/cloud-v2-api'

const BASE = baseUrl.replace(/\/$/, '')

/**
 * Upload a bank statement PDF for an account
 * POST /recon/statement/upload (multipart/form-data)
 * form fields: accountId, description?, file
 * Notes:
 * - Statement name is generated by AI based on account/date range; do NOT send name.
 * - Start/end dates are inferred by AI from parsed transactions.
 */
export async function uploadStatement(form: FormData): Promise<BankStatementDTO> {
  const res = await axios.post<BankStatementDTO>(`${BASE}/recon/statement/upload`, form)
  return res.data
}

/**
 * List statements by account
 * GET /recon/statement/list?accountId=xxx
 */
export async function listStatementsByAccount(accountId: number): Promise<BankStatementDTO[]> {
  const res = await axios.get<BankStatementDTO[]>(`${BASE}/recon/statement/list`, { params: { accountId } })
  return res.data
}

/**
 * Export a statement as ZIP
 * GET /recon/statement/export?statementId=xxx
 * Returns: application/zip (attachment). We return AxiosResponse to read headers.
 */
export async function exportStatementZip(statementId: number) {
  const res = await axios.get(`${BASE}/recon/statement/export`, {
    params: { statementId },
    responseType: 'blob',
    // Accept any to ensure zip is returned
    headers: { Accept: 'application/zip, application/octet-stream' },
  })
  return res
}
